//Script GUID:1977496a-f7b1-45fe-b810-e097b7c14e0b
//Used for tracking history

persistedMetrics =
    EXTRACT name : string,
            tags : string,
            time : DateTime,
            value : double,
            deviceId: string
    FROM "D:/Scope/Data/persisted.txt"
    USING DefaultTextExtractor();

// filter by metric name and parse tags
running =
    SELECT name,
           Helper.ParseTags(tags) AS tags,
           time,
           value,
           deviceId
    FROM persistedMetrics
    WHERE name == "edgeagent_total_time_expected_running_seconds" OR name == "edgeagent_total_time_running_correctly_seconds";

// group by module, deviceId and instance to calculate duration
running =
    SELECT name,
           tags["module"]AS module,
           tags["instance"]AS instance,
           Helper.Hash(name, deviceId, tags["module"], tags["instance"]) AS uid,
           value,
           time,
           deviceId
    FROM running
    WHERE tags.ContainsKey("module") AND tags.ContainsKey("instance");

running =
    SELECT ANY_VALUE(name) AS name,
           ANY_VALUE(module) AS module,
           ANY_VALUE(deviceId) AS deviceId,
           MAX(value) - MIN(value) AS duration,
           uid
    FROM running
    GROUP BY uid;

//sum up instances from same deviceId
running =
    SELECT *,
           Helper.Hash(name, module, deviceId) AS uid2
    FROM running;

running =
    SELECT ANY_VALUE(name) AS name,
           ANY_VALUE(module) AS module,
           ANY_VALUE(deviceId) AS deviceId,
           SUM(duration) AS duration,
           uid2
    FROM running
    GROUP BY uid2;

// split into actual and expected
running =
    SELECT *,
           Helper.Hash(module, deviceId) AS uid3
    FROM running;

actual =
    SELECT *
    FROM running
    WHERE name == "edgeagent_total_time_running_correctly_seconds";

expected =
    SELECT *
    FROM running
    WHERE name == "edgeagent_total_time_expected_running_seconds";

// calculate result
avaliabilities =
    SELECT e.module,
           e.deviceId,
           a.duration / e.duration AS avaliability,
           a.duration AS actualRunningDuration,
           e.duration AS expectedRunningDuration
    FROM actual AS a
         INNER JOIN
             expected AS e
         ON e.uid3 == a.uid3;

deviceInfo =
    SSTREAM"D:/Scope/Data/ActiveEdgeDevices.ss";

avaliabilities =
    SELECT a.module, a.avaliability, a.actualRunningDuration, a.expectedRunningDuration, d.*
    FROM avaliabilities AS a
         LEFT JOIN
             deviceInfo AS d
         ON a.deviceId == d.value;

OUTPUT avaliabilities
TO "D:/Scope/Data/out1.txt"
ORDER BY module
USING DefaultTextOutputter(",");

//#DECLARE localCreated string = @"/local/Dev/lefitche/P360/" + "avaliabilitytest" + ".csv";
//OUTPUT avaliabilities
//TO @localCreated
//USING DefaultTextOutputter();
