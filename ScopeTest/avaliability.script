//Script GUID:1977496a-f7b1-45fe-b810-e097b7c14e0b
//Used for tracking history

persistedMetrics =
    EXTRACT name : string,
            tags : string,
            time : DateTime,
            value : double,
            key : int
    FROM "D:/Scope/Data/persisted.txt"
    USING DefaultTextExtractor();

// filter by metric name and parse tags
running =
    SELECT name,
           Helper.ParseTags(tags) AS tags,
           time,
           value
    FROM persistedMetrics
    WHERE name == "edgeagent_total_time_expected_running_seconds" OR name == "edgeagent_total_time_running_correctly_seconds";

// group by module and device device
running =
    SELECT name,
           tags["module"]AS module,
           tags["device_id"]AS device,
           Helper.Hash(name, tags["module"], tags["device_id"]) AS uid,
           value,
           time
    FROM running
    WHERE tags.ContainsKey("module") AND tags.ContainsKey("device_id");

running =
    SELECT ANY_VALUE(name) AS name,
           ANY_VALUE(module) AS module,
           ANY_VALUE(device) AS device,
           Helper.Duration(LIST(new DatedValue{Time = time, Value = value})) AS duration,
           uid
    FROM running
    GROUP BY uid;

// split into actual and expected
running =
    SELECT *,
           Helper.Hash(module, device) AS uid2
    FROM running;

actual =
    SELECT *
    FROM running
    WHERE name == "edgeagent_total_time_running_correctly_seconds";

expected =
    SELECT *
    FROM running
    WHERE name == "edgeagent_total_time_expected_running_seconds";

// calculate result
avaliabilities =
    SELECT e.module,
           e.device,
           a.duration / e.duration AS avaliability,
           a.duration AS actualRunningDuration,
           e.duration AS expectedRunningDuration
    FROM actual AS a
         INNER JOIN
             expected AS e
         ON e.uid2 == a.uid2;

OUTPUT avaliabilities
TO "D:/Scope/Data/out1.txt"
USING DefaultTextOutputter();